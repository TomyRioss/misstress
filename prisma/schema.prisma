generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Expense {
  id          String          @id @default(uuid())
  description String?
  amount      Decimal         @db.Decimal(10, 2)
  date        DateTime        @default(now())
  category    ExpenseCategory @default(OTROS)
  subCategory String?
  type        EntryType       @default(GASTO)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@index([date])
  @@index([category])
}

enum ExpenseCategory {
  COMIDA
  ALQUILER
  TRANSPORTE
  ENTRETENIMIENTO
  SERVICIOS
  SALUD
  EDUCACION
  DEPORTES
  SALARIO
  OTROS
}

enum EntryType {
  INGRESO
  GASTO
}

enum GoalStatus {
  ACTIVE
  COMPLETED
  PAUSED
}

 model Expense {
   id          String   @id @default(uuid())
   description String?
   amount      Decimal  @db.Decimal(10, 2)
   date        DateTime @default(now())
   category    ExpenseCategory @default(OTROS)
   subCategory String?
   type        EntryType @default(GASTO)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

   @@index([date])
   @@index([category])
 }

 model FinancialGoal {
   id          String   @id @default(uuid())
   name        String
   description String?
   targetAmount Decimal @db.Decimal(10, 2)
   currentAmount Decimal @db.Decimal(10, 2) @default(0)
   targetDate   DateTime?
   status      GoalStatus @default(ACTIVE)
   color       String   @default("#3B82F6")
   icon        String   @default("ðŸŽ¯")
   createdAt   DateTime @default(now())
   updatedAt   DateTime @updatedAt

   @@index([status])
   @@index([targetDate])
 }

 model Notification {
   id          String   @id @default(uuid())
   title       String
   message     String
   type        String   @default("INFO") // INFO, WARNING, SUCCESS, ERROR
   category    String?  // EXPENSE_LIMIT, GOAL_REMINDER, etc.
   isRead      Boolean  @default(false)
   createdAt   DateTime @default(now())

   @@index([isRead])
   @@index([category])
   @@index([createdAt])
 }
