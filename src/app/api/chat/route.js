import { NextResponse } from 'next/server';

const WEBHOOK_URL = process.env.N8N_WEBHOOK_URL;

// Bot de respaldo local para cuando N8N no est√© disponible
function getLocalBotResponse(message) {
  const msg = message.toLowerCase();

  // Respuestas relacionadas con finanzas personales
  if (
    msg.includes('hola') ||
    msg.includes('hi') ||
    msg.includes('buenos') ||
    msg.includes('buenas')
  ) {
    return '## ¬°Hola! üòä\n\n**Soy tu asistente financiero personal** con soporte completo de Markdown.\n\n### ¬øEn qu√© puedo ayudarte hoy?\n\n‚úÖ **Gesti√≥n de gastos** - Agregar, editar, analizar\n‚úÖ **Presupuesto** - Control y planificaci√≥n\n‚úÖ **Categor√≠as** - Organizaci√≥n inteligente\n‚úÖ **Consultas** - Cualquier duda sobre finanzas\n\n> üí° **Tip**: Escribe `ejemplo markdown` para ver todas las opciones de formato\n\n¬øQu√© te gustar√≠a hacer primero? ‚ú®';
  }

  if (
    msg.includes('gasto') ||
    msg.includes('dinero') ||
    msg.includes('presupuesto')
  ) {
    return 'üìä **Gesti√≥n de Gastos**\n\nVeo que quieres hablar sobre gastos. Aqu√≠ tienes las opciones disponibles:\n\n### üéØ Acciones R√°pidas\n- **Dashboard** ‚Üí Vista general con gr√°ficos\n- **Agregar Gasto** ‚Üí Bot√≥n `+` en la esquina superior\n- **Hoja de C√°lculo** ‚Üí Vista detallada d√≠a por d√≠a\n- **Historial** ‚Üí Progreso mensual con tendencias\n\n### üìã An√°lisis Disponibles\n1. **Por categor√≠a** - ¬øD√≥nde gastas m√°s?\n2. **Por mes** - Comparativa temporal\n3. **Balance** - Ingresos vs Gastos\n\n> üí° **Tip**: Usa el toggle `üìä Resumen` / `üìã Detalle` en el dashboard\n\n¬øEn qu√© aspecto espec√≠fico te gustar√≠a que te ayude?';
  }

  if (msg.includes('categoria') || msg.includes('categor√≠a')) {
    return 'üè∑Ô∏è **Categor√≠as de Gastos e Ingresos**\n\n### üí∏ Categor√≠as de Gastos\n| Icono | Categor√≠a | Ejemplos |\n|-------|-----------|----------|\n| üçî | **Comida** | Restaurantes, supermercado, delivery |\n| üè† | **Alquiler** | Renta, expensas, seguro |\n| üöó | **Transporte** | Combustible, taxi, transporte p√∫blico |\n| üé¨ | **Entretenimiento** | Cine, streaming, salidas |\n| üí° | **Servicios** | Luz, gas, agua, internet |\n| üè• | **Salud** | Medicinas, consultas, obra social |\n| üìö | **Educaci√≥n** | Cursos, libros, materiales |\n| ‚öΩ | **Deportes** | Gimnasio, equipamiento, clases |\n| üì¶ | **Otros** | Gastos varios |\n\n### üí∞ Categor√≠as de Ingresos\n- **üí∞ Salario** - Sueldo principal, freelance, bonos\n\n> üìä **Consejo**: Usa categor√≠as espec√≠ficas para an√°lisis m√°s precisos\n\n¬øQuieres saber c√≥mo cambiar la categor√≠a de un gasto?';
  }

  if (
    msg.includes('salario') ||
    msg.includes('ingreso') ||
    msg.includes('sueldo')
  ) {
    return 'üí∞ Para configurar tu salario, ve a la secci√≥n "Configuraci√≥n" en el men√∫ lateral. All√≠ puedes:\n\n‚Ä¢ Establecer tu salario mensual\n‚Ä¢ Modificarlo cuando sea necesario\n‚Ä¢ Ver el c√°lculo autom√°tico en ARS\n\n¬°Tu salario se agrega autom√°ticamente cada mes!';
  }

  if (
    msg.includes('reporte') ||
    msg.includes('historial') ||
    msg.includes('progreso')
  ) {
    return 'üìà Para revisar tu progreso financiero:\n\n‚Ä¢ **Dashboard**: Vista general del mes actual\n‚Ä¢ **Hoja de C√°lculo**: Detalles d√≠a por d√≠a\n‚Ä¢ **Historial Mensual**: Progreso a lo largo del tiempo\n‚Ä¢ **Transacciones**: Gesti√≥n completa de registros\n\n¬øQu√© tipo de an√°lisis te interesa?';
  }

  if (
    msg.includes('help') ||
    msg.includes('ayuda') ||
    msg.includes('como') ||
    msg.includes('c√≥mo')
  ) {
    return 'ü§î ¬°Estoy aqu√≠ para ayudarte! Estas son las funciones principales:\n\n‚Ä¢ **Agregar gastos**: Usa el bot√≥n "+" en el dashboard\n‚Ä¢ **Ver resumen**: Dashboard con gr√°ficos y estad√≠sticas\n‚Ä¢ **Analizar datos**: Hoja de c√°lculo detallada\n‚Ä¢ **Historial**: Progreso mensual con gr√°ficos\n‚Ä¢ **Configurar**: Establecer salario y preferencias\n\n¬øHay algo espec√≠fico que quieras aprender?';
  }

  if (msg.includes('gracias') || msg.includes('thanks')) {
    return '¬°De nada! üòä Estoy aqu√≠ siempre que necesites ayuda con tus finanzas. ¬°Que tengas un excelente d√≠a gestionando tu dinero! üí™‚ú®';
  }

  // Respuesta con Markdown para mostrar ejemplo
  if (
    msg.includes('markdown') ||
    msg.includes('formato') ||
    msg.includes('ejemplo')
  ) {
    return 'üìù ¬°Puedo responder en **Markdown**! Aqu√≠ tienes algunos ejemplos:\n\n## Formatos Disponibles\n\n‚Ä¢ **Texto en negrita**\n‚Ä¢ *Texto en cursiva*\n‚Ä¢ `c√≥digo inline`\n‚Ä¢ [Enlaces](https://ejemplo.com)\n\n### Lista de Tareas\n1. ‚úÖ **Agregar gastos** - Completo\n2. üîÑ **Revisar presupuesto** - En proceso\n3. ‚≠ê **Configurar metas** - Pendiente\n\n```javascript\n// Ejemplo de c√≥digo\nconst balance = ingresos - gastos;\nconsole.log(`Tu balance: $${balance}`);\n```\n\n> **Tip**: Usa el dashboard para ver tu progreso financiero\n\n¬øTe gustar√≠a ver m√°s ejemplos?';
  }

  // Respuesta general
  return `ü§ñ Hola! Soy tu asistente financiero personal. Puedo ayudarte con:\n\n‚Ä¢ Gesti√≥n de gastos e ingresos\n‚Ä¢ An√°lisis de tu presupuesto\n‚Ä¢ Configuraci√≥n de categor√≠as\n‚Ä¢ Consejos sobre finanzas personales\n\n¬øEn qu√© te puedo ayudar espec√≠ficamente? Tambi√©n puedes preguntarme sobre c√≥mo usar las diferentes funciones de la aplicaci√≥n. üí°`;
}

/**
 * POST /api/chat
 * Sends the user's message to the N8N webhook and streams back the AI response.
 */
export async function POST(request) {
  // Si no hay webhook configurado, usar el bot local
  if (!WEBHOOK_URL) {
    try {
      const { message } = await request.json();
      if (!message || typeof message !== 'string') {
        return new NextResponse('Missing "message" field', { status: 400 });
      }

      const reply = getLocalBotResponse(message);
      return NextResponse.json({ reply });
    } catch (error) {
      console.error('[LOCAL_CHAT]', error);
      return new NextResponse('Internal Server Error', { status: 500 });
    }
  }

  try {
    const { message } = await request.json();

    if (!message || typeof message !== 'string') {
      return new NextResponse('Missing "message" field', { status: 400 });
    }

    // Forward the message to the N8N webhook
    const webhookResponse = await fetch(WEBHOOK_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ message }),
    });

    // Obtener la respuesta como texto primero
    const responseText = await webhookResponse.text();

    if (!webhookResponse.ok) {
      // Si el webhook falla, usar el bot local de respaldo
      console.log('[CHAT] Webhook no disponible, usando bot local de respaldo');
      const localReply = getLocalBotResponse(message);
      return NextResponse.json({
        reply: `${localReply}\n\n_üí° Modo local activo - El asistente avanzado no est√° disponible moment√°neamente._`,
        fallback: true,
      });
    }

    // Intentar parsear como JSON, si falla, usar el texto directamente
    let botReply;
    try {
      const jsonData = JSON.parse(responseText);
      // Manejar diferentes formatos de respuesta del webhook
      if (jsonData.output) {
        botReply = jsonData.output;
      } else if (jsonData.reply) {
        botReply = jsonData.reply;
      } else if (jsonData.message) {
        botReply = jsonData.message;
      } else if (typeof jsonData === 'string') {
        botReply = jsonData;
      } else {
        // Si es un objeto complejo, convertir a string
        botReply = JSON.stringify(jsonData);
      }
    } catch (e) {
      // Si no es JSON v√°lido, usar el texto directamente como respuesta del bot
      botReply = responseText;
    }

    return NextResponse.json({ reply: botReply });
  } catch (error) {
    console.error('[CHAT_POST]', error);
    return new NextResponse('Internal Server Error', { status: 500 });
  }
}
